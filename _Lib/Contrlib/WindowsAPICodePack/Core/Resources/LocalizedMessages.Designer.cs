//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.WindowsAPICodePack.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class LocalizedMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LocalizedMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.WindowsAPICodePack.Resources.LocalizedMessages", typeof(LocalizedMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancelable cannot be changed while dialog is showing..
        /// </summary>
        internal static string CancelableCannotBeChanged {
            get {
                return ResourceManager.GetString("CancelableCannotBeChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dialog caption cannot be changed while dialog is showing..
        /// </summary>
        internal static string CaptionCannotBeChanged {
            get {
                return ResourceManager.GetString("CaptionCannotBeChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CheckBox text cannot be changed while dialog is showing..
        /// </summary>
        internal static string CheckBoxCannotBeChanged {
            get {
                return ResourceManager.GetString("CheckBoxCannotBeChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collapsed control text cannot be changed while dialog is showing..
        /// </summary>
        internal static string CollapsedTextCannotBeChanged {
            get {
                return ResourceManager.GetString("CollapsedTextCannotBeChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only supported on Windows 7 or newer..
        /// </summary>
        internal static string CoreHelpersRunningOn7 {
            get {
                return ResourceManager.GetString("CoreHelpersRunningOn7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only supported on Windows Vista or newer..
        /// </summary>
        internal static string CoreHelpersRunningOnVista {
            get {
                return ResourceManager.GetString("CoreHelpersRunningOnVista", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only supported on Windows XP or newer..
        /// </summary>
        internal static string CoreHelpersRunningOnXp {
            get {
                return ResourceManager.GetString("CoreHelpersRunningOnXp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dialog cannot have more than one control with the same name..
        /// </summary>
        internal static string DialogCollectionCannotHaveDuplicateNames {
            get {
                return ResourceManager.GetString("DialogCollectionCannotHaveDuplicateNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dialog control must be removed from current collections first..
        /// </summary>
        internal static string DialogCollectionControlAlreadyHosted {
            get {
                return ResourceManager.GetString("DialogCollectionControlAlreadyHosted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control name cannot be null or zero length..
        /// </summary>
        internal static string DialogCollectionControlNameNull {
            get {
                return ResourceManager.GetString("DialogCollectionControlNameNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modifying controls collection while dialog is showing is not supported..
        /// </summary>
        internal static string DialogCollectionModifyShowingDialog {
            get {
                return ResourceManager.GetString("DialogCollectionModifyShowingDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dialog control name cannot be empty or null..
        /// </summary>
        internal static string DialogControlNameCannotBeEmpty {
            get {
                return ResourceManager.GetString("DialogControlNameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dialog controls cannot be renamed..
        /// </summary>
        internal static string DialogControlsCannotBeRenamed {
            get {
                return ResourceManager.GetString("DialogControlsCannotBeRenamed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application.
        /// </summary>
        internal static string DialogDefaultCaption {
            get {
                return ResourceManager.GetString("DialogDefaultCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string DialogDefaultContent {
            get {
                return ResourceManager.GetString("DialogDefaultContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string DialogDefaultMainInstruction {
            get {
                return ResourceManager.GetString("DialogDefaultMainInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expanded information mode cannot be changed while dialog is showing..
        /// </summary>
        internal static string ExpandedDetailsCannotBeChanged {
            get {
                return ResourceManager.GetString("ExpandedDetailsCannotBeChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expanded control label cannot be changed while dialog is showing..
        /// </summary>
        internal static string ExpandedLabelCannotBeChanged {
            get {
                return ResourceManager.GetString("ExpandedLabelCannotBeChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expanding state of the dialog cannot be changed while dialog is showing..
        /// </summary>
        internal static string ExpandingStateCannotBeChanged {
            get {
                return ResourceManager.GetString("ExpandingStateCannotBeChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hyperlinks cannot be enabled/disabled while dialog is showing..
        /// </summary>
        internal static string HyperlinksCannotBetSet {
            get {
                return ResourceManager.GetString("HyperlinksCannotBetSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error has occurred in dialog configuration..
        /// </summary>
        internal static string NativeTaskDialogConfigurationError {
            get {
                return ResourceManager.GetString("NativeTaskDialogConfigurationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid arguments to Win32 call..
        /// </summary>
        internal static string NativeTaskDialogInternalErrorArgs {
            get {
                return ResourceManager.GetString("NativeTaskDialogInternalErrorArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dialog contents too complex..
        /// </summary>
        internal static string NativeTaskDialogInternalErrorComplex {
            get {
                return ResourceManager.GetString("NativeTaskDialogInternalErrorComplex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unexpected internal error occurred in the Win32 call: {0:x}.
        /// </summary>
        internal static string NativeTaskDialogInternalErrorUnexpected {
            get {
                return ResourceManager.GetString("NativeTaskDialogInternalErrorUnexpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TaskDialog feature needs to load version 6 of comctl32.dll but a different version is current loaded in memory..
        /// </summary>
        internal static string NativeTaskDialogVersionError {
            get {
                return ResourceManager.GetString("NativeTaskDialogVersionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dialog owner cannot be changed while dialog is showing..
        /// </summary>
        internal static string OwnerCannotBeChanged {
            get {
                return ResourceManager.GetString("OwnerCannotBeChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Progress bar cannot be changed while dialog is showing..
        /// </summary>
        internal static string ProgressBarCannotBeChanged {
            get {
                return ResourceManager.GetString("ProgressBarCannotBeChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Progress bar cannot be hosted in multiple dialogs..
        /// </summary>
        internal static string ProgressBarCannotBeHostedInMultipleDialogs {
            get {
                return ResourceManager.GetString("ProgressBarCannotBeHostedInMultipleDialogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StandardButtons cannot be changed while dialog is showing..
        /// </summary>
        internal static string StandardButtonsCannotBeChanged {
            get {
                return ResourceManager.GetString("StandardButtonsCannotBeChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Startup location cannot be changed while dialog is showing..
        /// </summary>
        internal static string StartupLocationCannotBeChanged {
            get {
                return ResourceManager.GetString("StartupLocationCannotBeChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bad button ID in closing event..
        /// </summary>
        internal static string TaskDialogBadButtonId {
            get {
                return ResourceManager.GetString("TaskDialogBadButtonId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Button text must be non-empty..
        /// </summary>
        internal static string TaskDialogButtonTextEmpty {
            get {
                return ResourceManager.GetString("TaskDialogButtonTextEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check box text must be provided to enable the dialog check box..
        /// </summary>
        internal static string TaskDialogCheckBoxTextRequiredToEnableCheckBox {
            get {
                return ResourceManager.GetString("TaskDialogCheckBoxTextRequiredToEnableCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to close a non-showing dialog..
        /// </summary>
        internal static string TaskDialogCloseNonShowing {
            get {
                return ResourceManager.GetString("TaskDialogCloseNonShowing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application.
        /// </summary>
        internal static string TaskDialogDefaultCaption {
            get {
                return ResourceManager.GetString("TaskDialogDefaultCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string TaskDialogDefaultContent {
            get {
                return ResourceManager.GetString("TaskDialogDefaultContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string TaskDialogDefaultMainInstruction {
            get {
                return ResourceManager.GetString("TaskDialogDefaultMainInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot have more than one default button of a given type..
        /// </summary>
        internal static string TaskDialogOnlyOneDefaultControl {
            get {
                return ResourceManager.GetString("TaskDialogOnlyOneDefaultControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum value provided must be greater than the minimum value..
        /// </summary>
        internal static string TaskDialogProgressBarMaxValueGreaterThanMin {
            get {
                return ResourceManager.GetString("TaskDialogProgressBarMaxValueGreaterThanMin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum value provided must be a positive number..
        /// </summary>
        internal static string TaskDialogProgressBarMinValueGreaterThanZero {
            get {
                return ResourceManager.GetString("TaskDialogProgressBarMinValueGreaterThanZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum value provided must less than the maximum value..
        /// </summary>
        internal static string TaskDialogProgressBarMinValueLessThanMax {
            get {
                return ResourceManager.GetString("TaskDialogProgressBarMinValueLessThanMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value provided must be greater than equal to the minimum value and less than the maximum value..
        /// </summary>
        internal static string TaskDialogProgressBarValueInRange {
            get {
                return ResourceManager.GetString("TaskDialogProgressBarValueInRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dialog cannot display both non-standard buttons and standard buttons..
        /// </summary>
        internal static string TaskDialogSupportedButtonsAndButtons {
            get {
                return ResourceManager.GetString("TaskDialogSupportedButtonsAndButtons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dialog cannot display both non-standard buttons and command links..
        /// </summary>
        internal static string TaskDialogSupportedButtonsAndLinks {
            get {
                return ResourceManager.GetString("TaskDialogSupportedButtonsAndLinks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown dialog control type..
        /// </summary>
        internal static string TaskDialogUnkownControl {
            get {
                return ResourceManager.GetString("TaskDialogUnkownControl", resourceCulture);
            }
        }
    }
}
